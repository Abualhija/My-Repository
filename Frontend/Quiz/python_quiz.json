[
  {
    "title": "What data structure does a binary tree degenerate to if it isn't balanced properly?",
    "answer_1": "linked list",
    "answer_2": "queue",
    "answer_3": "set",
    "answer_4": "OrderedDict",
    "right_answer": "linked list"
  },
  {
    "title": "What is the term to describe this code?\n\ncount, fruit, price = (2, 'apple', 3.5)",
    "answer_1": "tuple assignment",
    "answer_2": "tuple unpacking",
    "answer_3": "tuple matching",
    "answer_4": "tuple duplication",
    "right_answer": "tuple unpacking"
  },
  {
    "title": "What built-in list method would you use to remove items from a list?",
    "answer_1": ".delete() method",
    "answer_2": "pop(my_list)",
    "answer_3": "del(my_list)",
    "answer_4": ".pop() method",
    "right_answer": ".pop() method"
  },
  {
    "title": "What built-in Python data type is commonly used to represent a stack?",
    "answer_1": "set",
    "answer_2": "list",
    "answer_3": "dictionary",
    "answer_4": "You can only build a stack from scratch",
    "right_answer": "list"
  },
  {
    "title": "What would this expression return?\n\ncollege_years = ['Freshman', 'Sophomore', 'Junior', 'Senior']\nreturn list(enumerate(college_years, 2019))",
    "answer_1": "[('Freshman', 2019), ('Sophomore', 2020), ('Junior', 2021), ('Senior', 2022)]",
    "answer_2": "[(2019, 2020, 2021, 2022), ('Freshman', 'Sophomore', 'Junior', 'Senior')]",
    "answer_3": "[('Freshman', 'Sophomore', 'Junior', 'Senior'), (2019, 2020, 2021, 2022)]",
    "answer_4": "[(2019, 'Freshman'), (2020, 'Sophomore'), (2021, 'Junior'), (2022, 'Senior')]",
    "right_answer": "[(2019, 'Freshman'), (2020, 'Sophomore'), (2021, 'Junior'), (2022, 'Senior')]"
  },
  {
    "title": "What built-in Python data type is best suited for implementing a queue?",
    "answer_1": "dictionary",
    "answer_2": "set",
    "answer_3": "list",
    "answer_4": "None. You can only build a queue from scratch",
    "right_answer": "list"
  },
  {
    "title": "What is the correct syntax for instantiating a new object of the type Game?",
    "answer_1": "my_game = Game()",
    "answer_2": "my_game = class.Game()",
    "answer_3": "my_game = class(Game)",
    "answer_4": "my_game = Game.create()",
    "right_answer": "my_game = Game()"
  },
  {
    "title": "What is the term used to describe items that may be passed into a function?",
    "answer_1": "paradigms",
    "answer_2": "arguments",
    "answer_3": "attributes",
    "answer_4": "decorators",
    "right_answer": "arguments"
  },
  {
    "title": "Which collection type is used to associate values with unique keys?",
    "answer_1": "slot",
    "answer_2": "dictionary",
    "answer_3": "queue",
    "answer_4": "sorted list",
    "right_answer": "dictionary"
  },
  {
    "title": "What symbol(s) do you use to assess equality between two elements?",
    "answer_1": "&&",
    "answer_2": "=",
    "answer_3": "||",
    "answer_4": "==",
    "right_answer": "=="
  }
]
